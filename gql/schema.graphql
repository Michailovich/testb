enum SubObjEnum { TOOL TABLE CHAIR }
enum ChairType  { ABC CDE }

input ToolInput  { title: String! description: String }
input TableInput { name:  String! }
input ChairInput { name:  String! type:   ChairType! }

input MainInput {
  title: String!
  tool:  ToolInput
  table: TableInput
  chair: ChairInput
}

input MainUpdateInput {
  title:     String
  deletedAt: String
}

type Tool {
  id: Int!
  title: String!
  description: String
  mainId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Table {
  id: Int!
  name: String!
  mainId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Chair {
  id: Int!
  name: String!
  type: ChairType!
  mainId: Int!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Main {
  id: Int!
  title: String!
  subObj: SubObjEnum!
  subId: Int!
  tool: Tool
  table: Table
  chair: Chair
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Query {
  mains(includeDeleted: Boolean = false): [Main!]!
  main(id: Int!, includeDeleted: Boolean = false): Main
}

type Mutation {
  createMain(input: MainInput!): Main!
  updateMain(id: Int!, input: MainUpdateInput!): Main!
  deleteMain(id: Int!): Boolean!
}